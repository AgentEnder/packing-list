name: Pull Request Checks

on:
  pull_request:
    branches: [main, '**']
  push:
    branches: [main]

permissions:
  contents: write
  id-token: write
  pages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest

    env:
      NX_CLOUD_ACCESS_TOKEN: ${{ github.ref == 'refs/heads/main' && secrets.NX_CLOUD_MAIN || secrets.NX_CLOUD_PR }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start Supabase local services
        run: |
          cd packages/supabase
          supabase start --ignore-health-check

      - name: Wait for Supabase services
        run: |
          timeout=120
          while [ $timeout -gt 0 ]; do
            if cd packages/supabase && supabase status 2>/dev/null | grep -q "API URL"; then
              echo "✅ Supabase services are ready"
              break
            fi
            echo "⏳ Waiting for Supabase services... ($timeout seconds left)"
            sleep 5
            timeout=$((timeout - 5))
          done
          if [ $timeout -eq 0 ]; then
            echo "❌ Timeout waiting for Supabase services"
            cd packages/supabase && supabase status || true
            docker ps || true
            exit 1
          fi

      - name: Setup environment variables
        run: |
          # Get the anon key from Supabase status - fix the parsing
          cd packages/supabase
          ANON_KEY=$(supabase status | grep "anon key:" | awk '{print $3}')
          echo "LOCAL_SUPABASE_ANON_KEY=$ANON_KEY" >> $GITHUB_ENV

          # Also set the environment variables directly for this session
          echo "PUBLIC_ENV__SUPABASE_URL=http://localhost:54321" >> $GITHUB_ENV
          echo "PUBLIC_ENV__SUPABASE_ANON_KEY=$ANON_KEY" >> $GITHUB_ENV

          # Create .env.e2e file for E2E tests in the root directory
          cd ..
          cat > .env.e2e << EOF
          PUBLIC_ENV__SUPABASE_ANON_KEY=$ANON_KEY
          PUBLIC_ENV__SUPABASE_URL=http://localhost:54321
          EOF

          echo "✅ Created .env.e2e file with local Supabase configuration"
          echo "🔑 Anon key: ${ANON_KEY:0:20}..."

      - name: Verify environment setup
        run: |
          echo "🔍 Environment Variables:"
          echo "PUBLIC_ENV__SUPABASE_URL: $PUBLIC_ENV__SUPABASE_URL"
          echo "PUBLIC_ENV__SUPABASE_ANON_KEY: ${PUBLIC_ENV__SUPABASE_ANON_KEY:0:20}..."
          echo ""
          echo "📄 .env.e2e file contents:"
          cat .env.e2e
          echo ""

      - name: Verify Supabase setup
        run: |
          cd packages/supabase
          echo "📊 Supabase Status:"
          supabase status
          echo ""
          echo "🔧 Docker containers:"
          docker ps --filter "name=supabase" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

      - name: Derive appropriate SHAs for nx affected commands
        uses: nrwl/nx-set-shas@v4

      - name: Run Checks
        run: |
          pnpm nx affected -t lint,test,build --parallel=3
          pnpm test:e2e
        env:
          CI: true
          PUBLIC_ENV__BASE_URL: /
          PUBLIC_ENV__LOCATION: 'http://localhost:3000'
          PUBLIC_ENV__SUPABASE_URL: ${{ env.PUBLIC_ENV__SUPABASE_URL }}
          PUBLIC_ENV__SUPABASE_ANON_KEY: ${{ env.PUBLIC_ENV__SUPABASE_ANON_KEY }}

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: e2e/frontend-e2e/playwright-report/
          retention-days: 7

      - name: Stop Supabase services
        if: always()
        run: |
          cd packages/supabase
          supabase stop || true

      - name: Deploy
        run: pnpm nx deploy frontend
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLIC_ENV__BASE_URL: /${{ github.event.repository.name }}
          PUBLIC_ENV__LOCATION: https://craigory.dev/${{ github.event.repository.name }}
          PUBLIC_ENV__SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          PUBLIC_ENV__SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
